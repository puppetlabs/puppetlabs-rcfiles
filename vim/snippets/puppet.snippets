# vim: nofoldenable foldmethod=manual
snippet #!
	#! /usr/bin/env puppet

snippet '
	'${1:non interpreted string}'${2}
snippet "
	"${1:interpreted string}"${2}
snippet $
	${${1:variable}}${2}
snippet :
	'${1:title}':${2}
snippet =>
	${1:attribute} => '${2:value}',
	${3}
snippet +>
	${1:attribute} +> ${2:append_value},
	${3}
snippet ->
	${1:Type}['${2:title}'] -> ${3:Type}['${3:title}']
	${4}
snippet <-
	${1:Type}['${2:title}'] <- ${3:Type}['${3:title}']
	${4}
snippet ~>
	${1:Type}['${2:title}'] ~> ${3:Type}['${3:title}']
	${4}
snippet <~
	${1:Type}['${2:title}'] <~ ${3:Type}['${3:title}']
	${4}
snippet if
	if (${1:conditional}) {
	  ${2:# statements}
	}${3}
snippet else
	if (${1:conditional}) {
	  ${2:# statements}
	} else {
		${3:# default}
	}${4}
snippet elsif
	if (${1:conditional}) {
	  ${2:# statements}
	} elsif (${3:conditional}) {
		${4:# statements}
	} else {
		${5:# default}
	}${6}
snippet case
	case ${1:$variable} {
		${2:"value"}: {
			${3:# statements about $2}
		}
		${4:default}: {
			${5:# statements about $4}
		}
	}${6}
snippet ?
	$${1:variable} ? {
		'${2}'  => '${3}',
		default => '${4}',
	}${5}
snippet cron
	cron {
		'${1:name}':
		  command => '${2:command}',
			hour    => '${3:hour}',
			minute  => '${4:minute}',
			day     => '${5:day}',
	}${6}
snippet File
	File {
	  owner => '${1:root}',
	  group => '${2:$1}',
	  mode  => '${3:0644}',
	}${4}
snippet file
	file {
	  '${1:/path/to/file}':
		  ensure  => '${3:directory, file, link, absent}',
	    source  => "puppet:///modules/${module_name}/${2:$1}",
			owner   => '${4:root}',
			group   => '${5:root}',
			mode    => '${6:0644}',
			recurse => '${7:false}',
	}${8}
snippet Exec
	Exec {
		path => '${1:/bin:/sbin:/usr/bin:/usr/sbin}',
	}${2}
snippet exec
	exec {
		'${1:/usr/bin/}':
		  command     => '${2}',
			refreshonly => true,
	}${3}
snippet package
	package {
		'${1:package}':
		  ensure => ${2:present, latest, absent, purge},
	}
snippet user
	user {
		'${1:username}':
		  ensure     => ${2:present, absent},
			home       => '${3:/home/$1}',
			uid        => '${4:333}',
			gid        => '${5:$4}',
			comment    => '${6:$1 account}',
			password   => '!!',
			shell      => '${7:/bin/bash, /bin/false, /sbin/nologin, /bin/zsh, /bin/tcsh}',
	}${8}
snippet define
	# Define: ${1:mydefinedtype}
	#
	#   ${2:defined type description goes here.}
	#
	# Parameters:
	#
	# Actions:
	#
	# Requires:
	#
	# Sample Usage:
	#
	define $1($3) {
	  ${4:# statements}
	}
snippet class
	# Class: ${1:myclass}
	#
	#   ${2:class description goes here.}
	#
	# Actions:
	#
	# Requires:
	#
	# Sample Usage:
	#
	class $1(${3}){
	  ${4:# statements}
	}
snippet class::
	# Class: ${1:parentclass}::${2:myclass}
	#
	#   ${3:class description goes here.}
	#
	# Parameters:
	#
	# Actions:
	#
	# Requires:
	#
	# Sample Usage:
	#
	class $1::$2 inherits $1(${4}) {
		${5:# statements}
	}
